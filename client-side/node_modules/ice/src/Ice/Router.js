//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Router.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

/* slice2js browser-bundle-skip */
const _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
require("../Ice/Object");
require("../Ice/Value");
require("../Ice/ObjectPrx");
require("../Ice/Operation");
require("../Ice/Long");
require("../Ice/HashMap");
require("../Ice/HashUtil");
require("../Ice/ArrayUtil");
require("../Ice/StreamHelpers");
require("../Ice/BuiltinSequences");
const Ice = _ModuleRegistry.module("Ice");

const Slice = Ice.Slice;
/* slice2js browser-bundle-skip-end */

const iceC_Ice_Router_ids = [
    "::Ice::Object",
    "::Ice::Router"
];

/**
 * The Ice router interface. Routers can be set either globally with
 * {@link Communicator#setDefaultRouter}, or with <code>ice_router</code> on specific
 * proxies.
 *
 **/
Ice.Router = class extends Ice.Object
{
};

Ice.RouterPrx = class extends Ice.ObjectPrx
{
};

Slice.defineOperations(Ice.Router, Ice.RouterPrx, iceC_Ice_Router_ids, 1,
{
    "getClientProxy": [, 2, 1, , [9], , [[1, , 1]], , , ],
    "getServerProxy": [, 2, 1, , [9], , , , , ],
    "addProxies": [, 2, 2, , ["Ice.ObjectProxySeqHelper"], [["Ice.ObjectProxySeqHelper"]], , , , ]
});

const iceC_Ice_RouterFinder_ids = [
    "::Ice::Object",
    "::Ice::RouterFinder"
];

/**
 * This inferface should be implemented by services implementing the
 * Ice::Router interface. It should be advertised through an Ice
 * object with the identity `Ice/RouterFinder'. This allows clients to
 * retrieve the router proxy with just the endpoint information of the
 * service.
 *
 **/
Ice.RouterFinder = class extends Ice.Object
{
};

Ice.RouterFinderPrx = class extends Ice.ObjectPrx
{
};

Slice.defineOperations(Ice.RouterFinder, Ice.RouterFinderPrx, iceC_Ice_RouterFinder_ids, 1,
{
    "getRouter": [, , , , ["Ice.RouterPrx"], , , , , ]
});
/* slice2js browser-bundle-skip */
exports.Ice = Ice;
/* slice2js browser-bundle-skip-end */
