//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Version.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

/* slice2js browser-bundle-skip */
const _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
require("../Ice/Struct");
require("../Ice/Long");
require("../Ice/HashMap");
require("../Ice/HashUtil");
require("../Ice/ArrayUtil");
require("../Ice/StreamHelpers");
const Ice = _ModuleRegistry.module("Ice");

const Slice = Ice.Slice;
/* slice2js browser-bundle-skip-end */

/**
 * A version structure for the protocol version.
 *
 **/
Ice.ProtocolVersion = class
{
    constructor(major = 0, minor = 0)
    {
        this.major = major;
        this.minor = minor;
    }

    _write(ostr)
    {
        ostr.writeByte(this.major);
        ostr.writeByte(this.minor);
    }

    _read(istr)
    {
        this.major = istr.readByte();
        this.minor = istr.readByte();
    }

    static get minWireSize()
    {
        return  2;
    }
};

Slice.defineStruct(Ice.ProtocolVersion, true, false);

/**
 * A version structure for the encoding version.
 *
 **/
Ice.EncodingVersion = class
{
    constructor(major = 0, minor = 0)
    {
        this.major = major;
        this.minor = minor;
    }

    _write(ostr)
    {
        ostr.writeByte(this.major);
        ostr.writeByte(this.minor);
    }

    _read(istr)
    {
        this.major = istr.readByte();
        this.minor = istr.readByte();
    }

    static get minWireSize()
    {
        return  2;
    }
};

Slice.defineStruct(Ice.EncodingVersion, true, false);
/* slice2js browser-bundle-skip */
exports.Ice = Ice;
/* slice2js browser-bundle-skip-end */
