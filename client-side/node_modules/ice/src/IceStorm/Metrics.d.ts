//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


export namespace IceMX
{
    /**
     * Provides information on IceStorm topics.
     */
    class TopicMetrics extends Metrics
    {
        /**
         * One-shot constructor to initialize all data members.
         * @param id The metrics identifier.
         * @param total The total number of objects observed by this metrics.
         * @param current The number of objects currently observed by this metrics.
         * @param totalLifetime The sum of the lifetime of each observed objects.
         * @param failures The number of failures observed.
         * @param published Number of events published on the topic by publishers.
         * @param forwarded Number of events forwarded on the topic by IceStorm topic links.
         */
        constructor(id?:string, total?:Ice.Long, current?:number, totalLifetime?:Ice.Long, failures?:number, published?:Ice.Long, forwarded?:Ice.Long);
        /**
         * Number of events published on the topic by publishers.
         */
        published:Ice.Long;
        /**
         * Number of events forwarded on the topic by IceStorm topic links.
         */
        forwarded:Ice.Long;
    }

    /**
     * Provides information on IceStorm subscribers.
     */
    class SubscriberMetrics extends Metrics
    {
        /**
         * One-shot constructor to initialize all data members.
         * @param id The metrics identifier.
         * @param total The total number of objects observed by this metrics.
         * @param current The number of objects currently observed by this metrics.
         * @param totalLifetime The sum of the lifetime of each observed objects.
         * @param failures The number of failures observed.
         * @param queued Number of queued events.
         * @param outstanding Number of outstanding events.
         * @param delivered Number of forwarded events.
         */
        constructor(id?:string, total?:Ice.Long, current?:number, totalLifetime?:Ice.Long, failures?:number, queued?:number, outstanding?:number, delivered?:Ice.Long);
        /**
         * Number of queued events.
         */
        queued:number;
        /**
         * Number of outstanding events.
         */
        outstanding:number;
        /**
         * Number of forwarded events.
         */
        delivered:Ice.Long;
    }
}
