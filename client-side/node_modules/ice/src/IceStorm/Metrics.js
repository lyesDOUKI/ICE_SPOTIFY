//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

/* slice2js browser-bundle-skip */
const _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
require("../Ice/Object");
require("../Ice/Value");
require("../Ice/ObjectPrx");
require("../Ice/Long");
require("../Ice/HashMap");
require("../Ice/HashUtil");
require("../Ice/ArrayUtil");
require("../Ice/StreamHelpers");
const Ice = _ModuleRegistry.module("Ice");

const IceMX = require("../Ice/Metrics").IceMX;
const Slice = Ice.Slice;
/* slice2js browser-bundle-skip-end */

const iceC_IceMX_TopicMetrics_ids = [
    "::Ice::Object",
    "::IceMX::Metrics",
    "::IceMX::TopicMetrics"
];

/**
 * Provides information on IceStorm topics.
 *
 **/
IceMX.TopicMetrics = class extends IceMX.Metrics
{
    constructor(id, total, current, totalLifetime, failures, published = new Ice.Long(0, 0), forwarded = new Ice.Long(0, 0))
    {
        super(id, total, current, totalLifetime, failures);
        this.published = published;
        this.forwarded = forwarded;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeLong(this.published);
        ostr.writeLong(this.forwarded);
    }

    _iceReadMemberImpl(istr)
    {
        this.published = istr.readLong();
        this.forwarded = istr.readLong();
    }
};

Slice.defineValue(IceMX.TopicMetrics, iceC_IceMX_TopicMetrics_ids[2], false);

const iceC_IceMX_SubscriberMetrics_ids = [
    "::Ice::Object",
    "::IceMX::Metrics",
    "::IceMX::SubscriberMetrics"
];

/**
 * Provides information on IceStorm subscribers.
 *
 **/
IceMX.SubscriberMetrics = class extends IceMX.Metrics
{
    constructor(id, total, current, totalLifetime, failures, queued = 0, outstanding = 0, delivered = new Ice.Long(0, 0))
    {
        super(id, total, current, totalLifetime, failures);
        this.queued = queued;
        this.outstanding = outstanding;
        this.delivered = delivered;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeInt(this.queued);
        ostr.writeInt(this.outstanding);
        ostr.writeLong(this.delivered);
    }

    _iceReadMemberImpl(istr)
    {
        this.queued = istr.readInt();
        this.outstanding = istr.readInt();
        this.delivered = istr.readLong();
    }
};

Slice.defineValue(IceMX.SubscriberMetrics, iceC_IceMX_SubscriberMetrics_ids[2], false);
/* slice2js browser-bundle-skip */
exports.IceMX = IceMX;
/* slice2js browser-bundle-skip-end */
