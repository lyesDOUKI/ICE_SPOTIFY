"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//

var Ice = require("../Ice/ModuleRegistry").Ice;
require("../Ice/Communicator");
require("../Ice/LocalException");
require("../Ice/Properties");
require("../Ice/Protocol");
var Protocol = Ice.Protocol;

//
// Ice.InitializationData
//
Ice.InitializationData = /*#__PURE__*/function () {
  function _class() {
    _classCallCheck(this, _class);
    this.properties = null;
    this.logger = null;
    this.valueFactoryManager = null;
  }
  _createClass(_class, [{
    key: "clone",
    value: function clone() {
      var r = new Ice.InitializationData();
      r.properties = this.properties;
      r.logger = this.logger;
      r.valueFactoryManager = this.valueFactoryManager;
      return r;
    }
  }]);
  return _class;
}();

//
// Ice.initialize()
//
Ice.initialize = function (arg1, arg2) {
  var args = null;
  var initData = null;
  if (arg1 instanceof Array) {
    args = arg1;
  } else if (arg1 instanceof Ice.InitializationData) {
    initData = arg1;
  } else if (arg1 !== undefined && arg1 !== null) {
    throw new Ice.InitializationException("invalid argument to initialize");
  }
  if (arg2 !== undefined && arg2 !== null) {
    if (arg2 instanceof Ice.InitializationData && initData === null) {
      initData = arg2;
    } else {
      throw new Ice.InitializationException("invalid argument to initialize");
    }
  }
  if (initData === null) {
    initData = new Ice.InitializationData();
  } else {
    initData = initData.clone();
  }
  initData.properties = Ice.createProperties(args, initData.properties);
  var result = new Ice.Communicator(initData);
  result.finishSetup(null);
  return result;
};

//
// Ice.createProperties()
//
Ice.createProperties = function (args, defaults) {
  return new Ice.Properties(args, defaults);
};
Ice.currentProtocol = function () {
  return Protocol.currentProtocol.clone();
};
Ice.currentEncoding = function () {
  return Protocol.currentEncoding.clone();
};
Ice.stringVersion = function () {
  return "3.7.10"; // "A.B.C", with A=major, B=minor, C=patch
};

Ice.intVersion = function () {
  return 30710; // AABBCC, with AA=major, BB=minor, CC=patch
};

module.exports.Ice = Ice;