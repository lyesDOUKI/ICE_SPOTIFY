"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `FileParser.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

/* slice2js browser-bundle-skip */
var _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
require("../Ice/Object");
require("../Ice/Value");
require("../Ice/ObjectPrx");
require("../Ice/Operation");
require("../Ice/Exception");
require("../Ice/Long");
require("../Ice/HashMap");
require("../Ice/HashUtil");
require("../Ice/ArrayUtil");
require("../Ice/StreamHelpers");
var Ice = _ModuleRegistry.module("Ice");
var IceGrid = require("../IceGrid/Admin").IceGrid;
var Slice = Ice.Slice;
/* slice2js browser-bundle-skip-end */

/**
 * This exception is raised if an error occurs during parsing.
 *
 **/
IceGrid.ParseException = /*#__PURE__*/function (_Ice$UserException) {
  _inherits(_class, _Ice$UserException);
  var _super = _createSuper(_class);
  function _class() {
    var _this;
    var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
    var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
    _classCallCheck(this, _class);
    _this = _super.call(this, _cause);
    _this.reason = reason;
    return _this;
  }
  _createClass(_class, [{
    key: "_mostDerivedType",
    value: function _mostDerivedType() {
      return IceGrid.ParseException;
    }
  }, {
    key: "_writeMemberImpl",
    value: function _writeMemberImpl(ostr) {
      ostr.writeString(this.reason);
    }
  }, {
    key: "_readMemberImpl",
    value: function _readMemberImpl(istr) {
      this.reason = istr.readString();
    }
  }], [{
    key: "_parent",
    get: function get() {
      return Ice.UserException;
    }
  }, {
    key: "_id",
    get: function get() {
      return "::IceGrid::ParseException";
    }
  }]);
  return _class;
}(Ice.UserException);
var iceC_IceGrid_FileParser_ids = ["::Ice::Object", "::IceGrid::FileParser"];

/**
 * <code>icegridadmin</code> provides a {@link FileParser}
 * object to transform XML files into {@link ApplicationDescriptor}
 * objects.
 *
 **/
IceGrid.FileParser = /*#__PURE__*/function (_Ice$Object) {
  _inherits(_class2, _Ice$Object);
  var _super2 = _createSuper(_class2);
  function _class2() {
    _classCallCheck(this, _class2);
    return _super2.apply(this, arguments);
  }
  return _createClass(_class2);
}(Ice.Object);
IceGrid.FileParserPrx = /*#__PURE__*/function (_Ice$ObjectPrx) {
  _inherits(_class3, _Ice$ObjectPrx);
  var _super3 = _createSuper(_class3);
  function _class3() {
    _classCallCheck(this, _class3);
    return _super3.apply(this, arguments);
  }
  return _createClass(_class3);
}(Ice.ObjectPrx);
Slice.defineOperations(IceGrid.FileParser, IceGrid.FileParserPrx, iceC_IceGrid_FileParser_ids, 1, {
  "parse": [, 2, 2,, [IceGrid.ApplicationDescriptor], [[7], ["IceGrid.AdminPrx"]],, [IceGrid.ParseException],, true]
});
/* slice2js browser-bundle-skip */
exports.IceGrid = IceGrid;
/* slice2js browser-bundle-skip-end */